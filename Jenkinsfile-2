pipeline {
  agent any
  options {
    skipDefaultCheckout false
  }
  environment {
    harbor=credentials('harbor')
    IMAGE_TAG = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim()
  }
  stages {
    stage("Build docker scrapy image") {
      steps {
        dir('hello-nginx'){
          sh 'docker build -t 10.33.109.104/parallel-jobs/hello-py:${IMAGE_TAG} .'
        }
      }
    }
    stage("Build docker hello-py image") {
      steps {
        dir('hello-py'){
          sh 'docker build -t 10.33.109.104/parallel-jobs/hello-py:${IMAGE_TAG} .'
        }
      }
    }
    stage("Build Docker Pallete image") {
      steps {
        dir('pallete'){
          sh 'docker build -t 10.33.109.104/parallel-jobs/pallete:${IMAGE_TAG} .'
        }
      }
    }
    stage("Build Docker pengedit-md Image") {
      steps {
        dir('pengedit-md'){
          sh 'docker build -t 10.33.109.104/parallel-jobs/pengedit-md:${IMAGE_TAG} .'
        }
      }
    }

    stage("Login to Harbor Registry") {
      steps {
        sh 'echo $harbor_PSW | docker login 10.33.109.104 -u $harbor_USR --password-stdin'
      }
    }
    stage("Push Docker Scrapy Image") {
      steps {
        sh 'docker push 10.33.109.104/parallel-jobs/hello-nginx:${IMAGE_TAG}'
      }
    }
    stage("Push Docker hello-py Image") {
      steps {
        sh 'docker push 10.33.109.104/parallel-jobs/hello-py:${IMAGE_TAG}'
      }
    }
    stage("Push Docker Pallete Image") {
      steps {
        sh 'docker push 10.33.109.104/parallel-jobs/pallete:${IMAGE_TAG}'
      }
    }
    stage("Push Docker pengedit-md Image") {
      steps {
        sh 'docker push 10.33.109.104/parallel-jobs/pengedit-md:${IMAGE_TAG}'
      }
    }

  }
  post {
    success {
      sh 'docker images'
    }
  }
}